# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input CreateTodoInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateUserInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Properties by which the user gender is male or female."""
enum GenderEnum {
  female
  male
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createTodo(createTodoInput: CreateTodoInput!): Todo!
  createUser(createUserInput: CreateUserInput!): User!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  removeTodo(id: Int!): Todo!
  removeUser(id: Int!): User!
  signup(data: SignupInput!): Auth!
  updateTodo(updateTodoInput: UpdateTodoInput!): Todo!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Query {
  todo(id: Int!): Todo!
  todos: [Todo!]!
  user(id: Int!): User!
  users: [User!]!
}

input SignupInput {
  address: String!
  dateOfBirth: DateTime!
  email: String!
  gender: String!
  password: String!
  phoneNumber: String!
  username: String!
}

"""
Properties by which the todo status is Pending, InProgress or Completed.
"""
enum StatusEnum {
  Completed
  InProgress
  Pending
}

type Todo {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  status: StatusEnum!
  todoItem: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  user: User!
  userId: Int!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateTodoInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateUserInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type User {
  address: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  dateOfBirth: DateTime!
  email: String!
  gender: GenderEnum!
  id: ID!
  phoneNumber: String!
  todos: [Todo!]

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  username: String!
}